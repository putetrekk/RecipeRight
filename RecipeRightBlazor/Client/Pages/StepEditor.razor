@using RecipeRightBlazor.Shared
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http
<h3>Step @Index</h3>

<div>
    @foreach (IngredientWithAmount ingredientWithAmount in Step.IngredientsWithAmounts)
    {
        <IngredientWithAmountEditor IngredientWithAmount="ingredientWithAmount" Ingredients="ingredients"/>
    }
</div>
<div>
    @if (ingredients == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <label for="ingredientToAddId">Add step ingredient</label>
        <InputSelect @bind-Value="@ingredientToAddId" id="ingredientToAddId">
            <option value="">Choose ingredient...</option>
            @foreach (Ingredient ingredient in ingredients)
                {
                <option value="@ingredient.Id">@ingredient.Name</option>
                }
        </InputSelect>
        <a class="btn" @onclick="@AddIngredientToStep">Add step ingredient</a>
    }
</div>
<div>
    <label for="@($"action-{Step.Id}")">Action</label>
    <InputTextArea id="@($"action-{Step.Id}")" @bind-Value="Step.Action" />
</div>



@code {
    [Parameter]
    public Step Step { get; set; }

    [Parameter]
    public int Index { get; set; }

    private Ingredient[] ingredients;

    private string ingredientToAddId;

    private void AddIngredientToStep()
    {
        Console.WriteLine("trying to add iwa");
        var ingredient = ingredients.First(i => i.Id == Guid.Parse(ingredientToAddId));
        var ingredientWithAmount = new IngredientWithAmount
        {
            Id = Guid.NewGuid(),
            Ingredient = ingredient,
        };
        Step.IngredientsWithAmounts.Add(ingredientWithAmount);
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ingredients = await Http.GetFromJsonAsync<Ingredient[]>("Ingredient");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}